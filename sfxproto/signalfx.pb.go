// Code generated by protoc-gen-go.
// source: sfxproto/signalfx.proto
// DO NOT EDIT!

/*
Package sfxproto is a generated protocol buffer package.

It is generated from these files:
	sfxproto/signalfx.proto

It has these top-level messages:
	Datum
	Dimension
	DataPoint
	DataPointUploadMessage
*/
package sfxproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetricType int32

const (
	// Numerical: Periodic, instantaneous measurement of some state.
	MetricType_GAUGE MetricType = 0
	// Numerical: Count of occurrences. Generally non-negative integers.
	MetricType_COUNTER MetricType = 1
	// String: Used for non-continuous quantities (that is, measurements where
	// there is a fixed set of meaningful values). This is essentially a special
	// case of gauge.
	MetricType_ENUM MetricType = 2
	// Tracks a value that increases over time, where only the difference is
	// important.
	MetricType_CUMULATIVE_COUNTER MetricType = 3
)

var MetricType_name = map[int32]string{
	0: "GAUGE",
	1: "COUNTER",
	2: "ENUM",
	3: "CUMULATIVE_COUNTER",
}
var MetricType_value = map[string]int32{
	"GAUGE":              0,
	"COUNTER":            1,
	"ENUM":               2,
	"CUMULATIVE_COUNTER": 3,
}

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}
func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (x *MetricType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricType_value, data, "MetricType")
	if err != nil {
		return err
	}
	*x = MetricType(value)
	return nil
}
func (MetricType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Datum struct {
	StrValue         *string  `protobuf:"bytes,1,opt,name=strValue" json:"strValue,omitempty"`
	DoubleValue      *float64 `protobuf:"fixed64,2,opt,name=doubleValue" json:"doubleValue,omitempty"`
	IntValue         *int64   `protobuf:"varint,3,opt,name=intValue" json:"intValue,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Datum) Reset()                    { *m = Datum{} }
func (m *Datum) String() string            { return proto.CompactTextString(m) }
func (*Datum) ProtoMessage()               {}
func (*Datum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Datum) GetStrValue() string {
	if m != nil && m.StrValue != nil {
		return *m.StrValue
	}
	return ""
}

func (m *Datum) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *Datum) GetIntValue() int64 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

type Dimension struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Dimension) Reset()                    { *m = Dimension{} }
func (m *Dimension) String() string            { return proto.CompactTextString(m) }
func (*Dimension) ProtoMessage()               {}
func (*Dimension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Dimension) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Dimension) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type DataPoint struct {
	// source, field 1, was deprecated, so start at field 2
	Metric           *string      `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
	Timestamp        *int64       `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Value            *Datum       `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	MetricType       *MetricType  `protobuf:"varint,5,opt,name=metricType,enum=sfxproto.MetricType" json:"metricType,omitempty"`
	Dimensions       []*Dimension `protobuf:"bytes,6,rep,name=dimensions" json:"dimensions,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DataPoint) Reset()                    { *m = DataPoint{} }
func (*DataPoint) ProtoMessage()               {}
func (*DataPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DataPoint) GetMetric() string {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return ""
}

func (m *DataPoint) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *DataPoint) GetValue() *Datum {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DataPoint) GetMetricType() MetricType {
	if m != nil && m.MetricType != nil {
		return *m.MetricType
	}
	return MetricType_GAUGE
}

func (m *DataPoint) GetDimensions() []*Dimension {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

type DataPointUploadMessage struct {
	Datapoints       []*DataPoint `protobuf:"bytes,1,rep,name=datapoints" json:"datapoints,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DataPointUploadMessage) Reset()                    { *m = DataPointUploadMessage{} }
func (m *DataPointUploadMessage) String() string            { return proto.CompactTextString(m) }
func (*DataPointUploadMessage) ProtoMessage()               {}
func (*DataPointUploadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DataPointUploadMessage) GetDatapoints() []*DataPoint {
	if m != nil {
		return m.Datapoints
	}
	return nil
}

func init() {
	proto.RegisterType((*Datum)(nil), "sfxproto.Datum")
	proto.RegisterType((*Dimension)(nil), "sfxproto.Dimension")
	proto.RegisterType((*DataPoint)(nil), "sfxproto.DataPoint")
	proto.RegisterType((*DataPointUploadMessage)(nil), "sfxproto.DataPointUploadMessage")
	proto.RegisterEnum("sfxproto.MetricType", MetricType_name, MetricType_value)
}

func init() { proto.RegisterFile("sfxproto/signalfx.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0x51, 0x4f, 0xc2, 0x30,
	0x14, 0x85, 0x1d, 0x63, 0xc8, 0x2e, 0x89, 0x2e, 0x57, 0x82, 0xc4, 0xf8, 0x40, 0x96, 0x98, 0x18,
	0x1f, 0x30, 0x01, 0xff, 0x00, 0x81, 0x49, 0x4c, 0x1c, 0x9a, 0x86, 0xf2, 0x6a, 0xaa, 0x14, 0xb2,
	0xb8, 0xad, 0x0b, 0x2d, 0x06, 0x7e, 0xa7, 0x7f, 0xc8, 0xc2, 0xd6, 0xb1, 0xf8, 0xb6, 0xd3, 0xef,
	0xdc, 0x73, 0x76, 0x2f, 0x5c, 0xcb, 0xd5, 0x2e, 0xdb, 0x08, 0x25, 0x1e, 0x65, 0xb4, 0x4e, 0x59,
	0xbc, 0xda, 0xf5, 0x8f, 0x12, 0x9b, 0x06, 0xf8, 0x0c, 0x9c, 0x09, 0x53, 0xdb, 0x04, 0x6f, 0xa0,
	0x29, 0xd5, 0x66, 0xc1, 0xe2, 0x2d, 0xef, 0x5a, 0x3d, 0xeb, 0xde, 0x25, 0xa5, 0xc6, 0x1e, 0xb4,
	0x96, 0x62, 0xfb, 0x19, 0xf3, 0x1c, 0xd7, 0x34, 0xb6, 0x48, 0xf5, 0xe9, 0x30, 0x1d, 0xa5, 0x2a,
	0xc7, 0xb6, 0xc6, 0x36, 0x29, 0xb5, 0x3f, 0x04, 0x77, 0x12, 0x25, 0x3c, 0x95, 0x91, 0x48, 0xd1,
	0x03, 0xfb, 0x9b, 0xef, 0x8b, 0x86, 0xc3, 0x27, 0xb6, 0xc1, 0xf9, 0x29, 0x63, 0x5d, 0x92, 0x0b,
	0xff, 0xd7, 0xd2, 0x53, 0x4c, 0xb1, 0x77, 0xa1, 0x73, 0xb0, 0x03, 0x8d, 0x84, 0xab, 0x4d, 0xf4,
	0x55, 0x98, 0x0a, 0x85, 0xb7, 0xe0, 0x2a, 0x1d, 0x2d, 0x15, 0x4b, 0xb2, 0xa2, 0xf7, 0xf4, 0x80,
	0x77, 0x26, 0xb9, 0xae, 0x49, 0x6b, 0x70, 0xd9, 0x37, 0x5b, 0xf7, 0x8f, 0x2b, 0x17, 0x55, 0xf8,
	0x04, 0x90, 0xc7, 0xcd, 0xf7, 0x19, 0xef, 0x3a, 0xda, 0x7b, 0x31, 0x68, 0x9f, 0xbc, 0x61, 0xc9,
	0x48, 0xc5, 0x87, 0x43, 0x80, 0xa5, 0xd9, 0x4a, 0x76, 0x1b, 0x3d, 0x5b, 0x37, 0x5c, 0x55, 0x1a,
	0x0c, 0x23, 0x15, 0x9b, 0x1f, 0x42, 0xa7, 0x5c, 0x8a, 0x66, 0xb1, 0x60, 0xcb, 0x90, 0x4b, 0xc9,
	0xd6, 0x79, 0x9c, 0x26, 0xd9, 0x81, 0x48, 0x7d, 0x9e, 0xff, 0x71, 0x66, 0x8a, 0x54, 0x6c, 0x0f,
	0xcf, 0x00, 0xa7, 0xbf, 0x43, 0x17, 0x9c, 0xe9, 0x88, 0x4e, 0x03, 0xef, 0x0c, 0x5b, 0x70, 0x3e,
	0x7e, 0xa3, 0xb3, 0x79, 0x40, 0x3c, 0x0b, 0x9b, 0x50, 0x0f, 0x66, 0x34, 0xf4, 0x6a, 0xfa, 0x8c,
	0x38, 0xa6, 0x21, 0x7d, 0x1d, 0xcd, 0x5f, 0x16, 0xc1, 0x87, 0x71, 0xd8, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x86, 0x3b, 0xf7, 0xcb, 0x28, 0x02, 0x00, 0x00,
}
